name: Build Docker images
on:
  push:
    branches: ["main"]
    tags: ["v*"]

concurrency: docker

jobs:
  docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - base_image: "ubuntu:22.04"
            use_cuda: "OFF"
            tag_suffix: ""
          - base_image: "nvidia/cuda:12.4.1-cudnn-devel-ubuntu22.04"
            use_cuda: "ON"
            tag_suffix: "-cuda12.4"
          - base_image: "nvidia/cuda:12.8.1-cudnn-devel-ubuntu24.04"
            use_cuda: "ON"
            tag_suffix: "-cuda12.8"
    steps:
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/educelab/pgs-recon
          flavor: |
            suffix=${{ matrix.tag_suffix }}
          tags: |
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=edge,enable={{is_default_branch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          build-args: |
            BASE_IMAGE=${{ matrix.base_image }}
            USE_CUDA=${{ matrix.use_cuda }}
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-to: type=gha,mode=max
          cache-from: type=gha
